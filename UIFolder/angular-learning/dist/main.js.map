{"version":3,"sources":["./src/app/tweet/update-add-tweets/update-add-tweets.component.ts","./src/app/tweet/update-add-tweets/update-add-tweets.component.html","./src/app/service/auth.service.ts","./src/environments/environment.ts","./src/app/tweet/view-tweet/view-tweet.component.html","./src/app/tweet/view-tweet/view-tweet.component.ts","./src/app/service/user.service.ts","./src/app/site/login/login.component.ts","./src/app/site/login/login.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/user/register/register.component.ts","./src/app/user/register/register.component.html","./src/app/service/tweet.service.ts","./src/app/user/forgot-password/forgot-password.component.ts","./src/app/user/forgot-password/forgot-password.component.html","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/site/header/header.component.html","./src/app/site/header/header.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TweetService } from 'src/app/service/tweet.service';\n\n@Component({\n  selector: 'app-update-add-tweets',\n  templateUrl: './update-add-tweets.component.html',\n  styleUrls: ['./update-add-tweets.component.css']\n})\nexport class UpdateAddTweetsComponent implements OnInit {\n\n  \"addTweetForm\": FormGroup;\n  \"isUpdate\": Boolean;\n  \"updateDetail\":any;\n  constructor(private fb: FormBuilder, private router: Router, private tweetService: TweetService) { }\n\n  ngOnInit(): void {\n    this.formInitialization();\n    let url = window.location.pathname.split('/').pop();\n    if (url == 'addTweet') {\n      this.isUpdate = false;\n    } else {\n      this.isUpdate = true;\n      this.updateDetail = sessionStorage.getItem('updateTweet');\n      this.patchValue(JSON.parse(this.updateDetail));\n    }\n  }\n\n  formInitialization(): void {\n    this.addTweetForm = this.fb.group({\n      tweet: ['', [Validators.required]],\n      tags: [''],\n    })\n  }\n\n  patchValue(detail: any): void {\n    this.addTweetForm.patchValue({\n      tweet: detail.tweet,\n      tags: detail.tags\n    })\n  }\n\n  submit(): void {\n    if (this.addTweetForm.valid) {\n      if (this.isUpdate) {\n        this.tweetService.updateTweet(this.addTweetForm.value, JSON.parse(this.updateDetail).id).subscribe(\n          (data) => {\n            if (data.status) {\n              //msg\n              setTimeout(() => {\n                this.router.navigateByUrl('/home');\n              }, 5000);\n            }\n          });\n      } else {\n        this.tweetService.addTweet(this.addTweetForm.value).subscribe(\n          (data) => {\n            if (data.status) {\n              //msg\n              setTimeout(() => {\n                this.router.navigateByUrl('/home');\n              }, 5000);\n            }\n          });\n      }\n    } else {\n      //msg\n    }\n  }\n\n}\n","<div class=\"container mt-5 col-lg-5\">\n    <div class=\"card\">\n        <div class=\"container-fluid\">\n            <h2 class=\"text-center\" *ngIf=\"!isUpdate\">Add_Tweet</h2>\n            <h2 class=\"text-center\" *ngIf=\"isUpdate\">Update_Tweet</h2>\n            <form [formGroup]=\"addTweetForm\" (ngSubmit)=\"submit()\">\n                <div class=\"form-row\">\n                    <div class=\"form-group col-sm-12 col-lg-12\">\n                        <label for=\"tweet\"><strong>Tweet</strong></label>\n                        <textarea type=\"textarea\" class=\"form-control\" id=\"tweet\" rows=\"3\" placeholder=\"Enter the description\" formControlName=\"tweet\"></textarea>\n                        <!-- <div class=\"text-danger\" *ngIf=\"tweet.touched && !tweet.valid\"><small> Tweet Description is required</small></div> -->\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-sm-12  col-lg-12\">\n                        <label class=\"text-bold\" for=\"tag\"><strong>Tags</strong> (Use Space to seperate tag)</label>\n                        <input type=\"text\" class=\"form-control\" id=\"tag\" placeholder=\"Enter the tags\" formControlName=\"tags\">\n                        <!-- <div class=\"text-danger\" *ngIf=\"username.touched && !username.valid\"><small> Password is required</small></div> -->\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"text-center form-group col-sm-12 col-lg-12 \">\n                        <button type=\"submit\" class=\"btn btn-primary text-light\">Post</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  isLoggedIn = false;\n  private \"userName\": string;\n  private \"userId\": number;\n  constructor() { }\n\n  public setUser(userName: string) {\n    this.userName = userName;\n  }\n  public getUser() {\n    return this.userName;\n  }\n  public setUserId(Id: number) {\n    this.userId = Id;\n  }\n  public getUserId() {\n    return this.userId;\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serviceUrl : \"http://localhost:8081/api/v1.0/\",\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"container my-5 col-lg-7\">\n    <div class=\"container-fluid\" *ngFor=\"let detail of tweetList\">\n        <div class=\"card m-3 px-0\">\n            <div class=\"card-header\">\n                <h5 class=\"d-flex\">\n                    <span>{{detail?.userName}}</span>\n                    <span class=\"ml-auto\" *ngIf=\"getUserName()==detail.userName\"><a class=\"mx-3\" href=\"javascript:void(0)\" (click)=\"onUpdate(detail)\">\n                            <i class=\" material-icons text-dark\">\n                                <h5><span class=\"material-icons-outlined \">create</span></h5>\n                            </i>\n                        </a><a href=\"javascript:void(0)\" class=\"mx-3\" (click)=\"onDelete(detail.id)\">\n                            <i class=\" material-icons text-dark\">\n                                <h5><span class=\"material-icons-outlined\">delete</span></h5>\n                            </i>\n                        </a>\n                    </span>\n                </h5>\n                <p class=\"ml-4 mb-0\">{{detail?.tweet}}</p>\n                <p class=\"ml-4 mb-0\">{{detail?.tags}}</p>\n            </div>\n            <div class=\"card-body my-auto\">\n                <a href=\"javascript:void(0)\" (click)=\"AddLike(detail.id)\"><i class=\"material-icons text-dark\"><span\n                            class=\"material-icons-outlined \">\n                            thumb_up_of_alt\n                        </span></i></a> <span class=\"pt-5 ml-2\">{{detail?.likes}}</span>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { TweetService } from 'src/app/service/tweet.service';\n\n\n@Component({\n  selector: 'app-view-tweet',\n  templateUrl: './view-tweet.component.html',\n  styleUrls: ['./view-tweet.component.css']\n})\nexport class ViewTweetComponent implements OnInit {\n  \"tweetList\": any = [];\n  \"byUser\": boolean\n  constructor(private tweetService: TweetService,private authService:AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    sessionStorage.clear();\n    let url = window.location.pathname.split('/').pop();\n    if (url == 'home') {\n      this.byUser = false;\n      this.tweetService.getAllTweet().subscribe({\n        next: (data: any) => { if (data.status) { this.tweetList = data.posts } },\n      });\n    } else {\n      this.byUser = true;\n      this.tweetService.getAllTweetByUserName().subscribe({\n        next: (data: any) => { if (data.status) { this.tweetList = data.posts } },\n      });;\n    }\n  }\n  getUserName(){\n    return this.authService.getUser();\n  }\n\n  onUpdate(detail: any) {\n    sessionStorage.setItem('updateTweet', JSON.stringify(detail));\n    this.router.navigateByUrl('/updateTweet');\n  }\n\n  onDelete(tweetId: string) {\n    this.tweetService.deleteTweet(tweetId).subscribe(\n      data => {\n        if (data.status) {\n          //mess\n          let index = this.tweetList.findIndex((data: any) => data.id == tweetId);\n          this.tweetList.splice(index, 1);\n        } else {\n          //mess\n        }\n      }\n    )\n  }\n\n  AddLike(tweetId: string) {\n    this.tweetService.likeATweet(tweetId).subscribe({\n      next: (data: any) => {\n        if (data.status) {\n          let index = this.tweetList.findIndex((data: any) => data.id == tweetId);\n          this.tweetList[index].likes++;\n        } else {\n          //mess\n        }\n      }\n    })\n  }\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private baseUrl = environment.serviceUrl + \"tweets/\";\n  constructor(private http: HttpClient) { }\n\n  public userLogin(data: any) {\n   return this.http.post<any>(this.baseUrl + 'login', data);\n  }\n\n  public userRegister(data: any) {\n   return this.http.post<any>(this.baseUrl + 'register', data);\n  }\n\n  public forgotPassword(userName:String, data: any) {\n    return this.http.put<any>(this.baseUrl + `${userName}/forgot`,data );\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { UserService } from 'src/app/service/user.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  \"username\": String;\n  \"loginForm\": FormGroup;\n  \"isLoggedIn\": boolean;\n  \"formValidation\": boolean = true;\n  constructor(private fb: FormBuilder, private router: Router,private auth:AuthService, private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      userName: ['', [\n        Validators.required\n      ]],\n      password: ['', [\n        Validators.required\n      ]]\n    })\n  }\n  login() {\n    if (this.loginForm.valid)\n      this.userService.userLogin(this.loginForm.value).subscribe({\n        next:(data:any)=>{if(data.status){\n          this.auth.isLoggedIn = true;\n          this.auth.setUser(this.loginForm.value.userName);\n          this.router.navigateByUrl('/home')\n        }else{\n          this.auth.isLoggedIn = false;\n        }}\n      });\n  }\n}\n","<div class=\"container mt-5 col-lg-5\">\n    <div class=\"card\">\n        <div class=\"container-fluid\">\n            <h2 class=\"text-center\"> Login</h2>\n            <div class=\"alert alert-danger\" *ngIf=\"!formValidation\"> Invalid Username/Password</div>\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                <div class=\"form-row\">\n                    <div class=\"col-sm-3\">\n                    </div>\n                    <div class=\"col-sm-6\">\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-sm-12 col-lg-12\">\n                                <label for=\"userName\">Username</label>\n                                <div class=\"input-group mb-3\">\n                                  \n                                    <input type=\"text\" class=\"form-control\" id=\"userName\" placeholder=\"Enter Username\"\n                                        formControlName=\"userName\">\n                                </div>\n                            </div>\n                           \n                            <div class=\"form-group col-sm-12  col-lg-12\">\n                                <label for=\"inputPassword\">Password</label>\n                                <input type=\"password\" class=\"form-control\" id=\"inputPassword\"\n                                    placeholder=\"Enter Password\" formControlName=\"password\">\n                            </div>\n\n                           \n                            <div class=\"form-group text-center  col-sm-12 col-lg-12 \">\n                                <button class=\"btn color text-light\">Login</button>\n                                <div class=\"ml-auto\">Don't you have an account? <a routerLink=\"/signup\">Signup</a></div>\n                                <div class=\"ml-auto\"><a routerLink=\"/forgot-password\">Forgot Password</a></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-3\">\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-app';\n}\n","<app-header></app-header>\r\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HeaderComponent } from './site/header/header.component';\nimport { LoginComponent } from './site/login/login.component';\nimport { RegisterComponent } from './user/register/register.component';\nimport { ViewTweetComponent } from './tweet/view-tweet/view-tweet.component';\nimport { AuthGuard } from './auth.guard';\nimport { UpdateAddTweetsComponent } from './tweet/update-add-tweets/update-add-tweets.component';\nimport { ForgotPasswordComponent } from './user/forgot-password/forgot-password.component';\n\n\n\nconst routes: Routes = [\n  { path: \"home\", component: ViewTweetComponent, canActivate:[AuthGuard] },\n  { path: \"home/user\", component: ViewTweetComponent,canActivate:[AuthGuard] },\n  { path: 'addTweet', component: UpdateAddTweetsComponent,canActivate:[AuthGuard] },\n  { path: 'updateTweet', component: UpdateAddTweetsComponent,canActivate:[AuthGuard] },\n  { path: 'signup', component: RegisterComponent },\n  { path: \"\", redirectTo: \"login\", pathMatch: \"full\" },\n  { path: \"login\", component: LoginComponent },\n  {path:\"forgot-password\", component:ForgotPasswordComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LoginComponent,\n    RegisterComponent,\n    ViewTweetComponent,\n    UpdateAddTweetsComponent,\n    ForgotPasswordComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes),\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/service/user';\nimport { UserService } from 'src/app/service/user.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  \"signupForm\": FormGroup;\n  \"user\": User[];\n  // passwordError: boolean;\n  \"signupformValidation\": boolean = false;\n  constructor(private fb: FormBuilder, private router: Router,private userService:UserService) { };\n\n  ngOnInit() {\n    // this.passwordError = true;\n    // this.error = null;\n    this.signupForm = this.fb.group({\n      userName: ['', [\n        Validators.required\n      ]],\n      firstName: ['', [\n        Validators.required\n      ]],\n      lastName: [''],\n      password: ['', [\n        Validators.required\n      ]],\n      confirmPassword: ['', [\n        Validators.required\n      ]],\n      email: ['', [Validators.required, Validators.email]],\n      contactNumber:['',[Validators.required,Validators.pattern(/^[0-9]{0,9}$/)]]\n    });\n  }\n  public getFormControl(name: string) {\n    return this.signupForm.get(name);\n  }\n  onSignup() {\n    if (this.signupForm.value.password != this.signupForm.value.confirmPassword) {\n      this.signupformValidation = true;\n\n    }\n    else {\n      console.log(\"Successful\");\n      \n    }\n\n  }\n  onSubmit() {\n    console.log(\"In submit\")\n    console.log(this.signupForm.value);\n    this.userService.userRegister(this.signupForm.value).subscribe(\n      {\n        next:(data:any)=>{if(data.status){\n         this.router.navigateByUrl('/login');\n         console.log(data.message);\n        }else{\n          console.log(data.message);\n        }}\n      });\n  }\n}","<div class=\"container my-5\">\n    <div class=\"card\">\n        <div class=\"container-fluid\">\n            <h2 class=\"text-center\">Signup</h2>\n           \n            <form [formGroup]=\"signupForm\">\n                <div class=\"form-row\">\n                    <div class=\"form-group col-sm-12 col-lg-6\">\n                        <label for=\"userName\">Username</label>\n                        <div class=\"input-group mb-3\">\n                           \n                        <input type=\"text\" class=\"form-control\" id=\"userName\" formControlName=\"userName\" placeholder=\"Enter Username\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-sm-12 col-md-6 col-lg-6\">\n                        <label for=\"firstName\">First Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"firstName\" id=\"firstName\" placeholder=\"Enter First Name\">\n                    </div>\n                    <div class=\"form-group col-sm-12 col-md-6 col-lg-6\">\n                        <label for=\"lastName\">Last Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"lastName\" id=\"lastName\" placeholder=\"Enter Last Name\">\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-sm-12 col-md-6 col-lg-6\">\n                        <label for=\"email\">Email</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"email\" id=\"email\" placeholder=\"Enter Email\">\n                    </div>\n                    <div class=\"form-group col-sm-12 col-md-6 col-lg-6\">\n                        <label for=\"contactNumber\">Contact Number</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"contactNumber\" id=\"contactNumber\" placeholder=\"Enter Contact\">\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-sm-12 col-md-6 col-lg-6\">\n                        <label for=\"inputPassword\">Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"inputPassword\" formControlName=\"password\" placeholder=\"Enter Password\">\n                    </div>\n                    <div class=\"form-group col-sm-12 col-md-6 col-lg-6\">\n                        <label for=\"inputConfirm\">Confirm Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"inputConfirm\" formControlName=\"confirmPassword\" placeholder=\"Enter Confirm Password\">\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\" form-group text-center col-sm-12 col-lg-12 \">\n                        <button type=\"submit\" class=\"btn btn-primary text-light\" (click)=onSubmit() >Signup</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TweetService {\n  private baseUrl = environment.serviceUrl + \"tweets/\";\n  constructor(private http: HttpClient, private auth: AuthService) { }\n\n  public getAllTweet() {\n    return this.http.get<any>(this.baseUrl + \"all\")\n  }\n  public getAllTweetByUserName() {\n    return this.http.get<any>(this.baseUrl + this.auth.getUser())\n  }\n  public addTweet(data: any) {\n    return this.http.post<any>(this.baseUrl + this.auth.getUser() + '/add', data);\n  }\n  public updateTweet(data: any, tweetId: String) {\n    return this.http.put<any>(this.baseUrl + this.auth.getUser() + '/update/' + tweetId, data);\n  }\n  public likeATweet(tweetId: string) {\n    return this.http.put<any>(this.baseUrl + this.auth.getUser() + '/like/' + tweetId, {});\n  }\n  public replyToTweet(data: any, tweetId: string) {\n    return this.http.post<any>(this.baseUrl + this.auth.getUser() + '/reply/' + tweetId, data);\n  }\n  public deleteTweet(tweetId: string) {\n    return this.http.delete<any>(this.baseUrl + this.auth.getUser() + '/delete/' + tweetId);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  \"forgotPasswordForm\": FormGroup;\n  // \"user\": User[];\n  \"successMsg\": boolean = false;\n  \"userNameEntered\": boolean = false;\n  constructor(private fb: FormBuilder, private router: Router,private userService:UserService) { }\n\n  ngOnInit(): void { \n    this.forgotPasswordForm = this.fb.group({\n    userName: ['', [\n      Validators.required\n    ]],\n    \n    password: ['', [\n      Validators.required\n    ]],\n    confirmPassword: ['', [\n      Validators.required\n    ]],\n    \n  });\n  }\n\n  public getFormControl(name: string) {\n    return this.forgotPasswordForm.get(name);\n  }\n\n  onUserNameEntered() {\n    console.log(\"In Forgot Password\")\n    this.userNameEntered = true;\n  }\n\n  onPasswordChange() {\n    this.userService.forgotPassword(this.forgotPasswordForm.value.userName,this.forgotPasswordForm.value).subscribe(\n      {\n        next:(data:any)=>{if(data.status){\n          this.userNameEntered=false;\n          this.successMsg = true;\n         this.router.navigateByUrl('/forgot-password');\n         console.log(data.message);\n        }else{\n          console.log(data.message);\n        }}\n      });\n  }\n\n}\n","<div class=\"container my-5\">\n    <div class=\"card\">\n        <div class=\"container-fluid\">\n            <h2 class=\"text-center\">Forgot Password</h2>\n            <div class=\"alert alert-success\" *ngIf=\"successMsg\"> \n                Password Updated Successfully!!!\n                <a routerLink=\"/login\">Back to Login</a>\n            </div>\n            <form [formGroup]=\"forgotPasswordForm\" *ngIf=\"!successMsg\">\n                <div *ngIf=\"!userNameEntered\">\n                <div class=\"form-row\">\n                    <div class=\"form-group col-sm-6 col-lg-6\">\n                        <label for=\"userName\">Username</label>\n                        <div class=\"input-group mb-3\">\n                           \n                        <input type=\"text\" class=\"form-control\" id=\"userName\" formControlName=\"userName\" placeholder=\"Enter Username\">\n                        </div>\n                    </div>\n                    <div class=\" form-group continue-btn col-sm-6 col-lg-6 \">\n                        <button type=\"submit\" class=\"btn btn-primary text-light\" (click)=onUserNameEntered() >Continue</button>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"userNameEntered\">\n                <div class=\"form-row\">\n                    <div class=\"form-group col-sm-12 col-md-6 col-lg-6\">\n                        <label for=\"inputPassword\">Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"inputPassword\" formControlName=\"password\" placeholder=\"Enter Password\">\n                    </div>\n                    <div class=\"form-group col-sm-12 col-md-6 col-lg-6\">\n                        <label for=\"inputConfirm\">Confirm Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"inputConfirm\" formControlName=\"confirmPassword\" placeholder=\"Enter Confirm Password\">\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\" form-group text-center col-sm-12 col-lg-12 \">\n                        <button type=\"submit\" class=\"btn btn-primary text-light\" (click)=onPasswordChange() >Change Password</button>\n                    </div>\n                </div>\n            </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService, private router: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.auth.isLoggedIn) {\n      return true;\n    } else {\n      this.router.navigateByUrl('/login');\n      return false;\n    }\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<nav class=\"navbar navbar-expand-lg navbar-dark color\">\n    <a class=\"navbar-brand\" routerLink=\"home\">\n        <h4 class=\"title\"><i class=\"material-icons text-light\">\n                <h4 class=\"title\">home</h4>\n            </i><span class=\"text-light\"> Tweet </span></h4>\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggler\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon  \"></span>\n    </button>\n    <div class=\"collapse navbar-collapse  \" id=\"navbarToggler\">\n        <ul class=\"navbar-nav ml-auto \">\n            <li class=\"nav-item \">\n                <a class=\"nav-link text-light\" *ngIf=\"isLogin()\" routerLink=\"home\">Home</a>\n            </li>\n            <li class=\"nav-item \">\n                <a class=\"nav-link text-light\" *ngIf=\"isLogin()\" routerLink=\"addTweet\"> Add Tweet</a>\n            </li>\n            <li class=\"nav-item \">\n                <a class=\"nav-link text-light\" *ngIf=\"!isLogin()\" routerLink=\"login\">Login</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link text-light\" *ngIf=\"isLogin()\"  routerLink=\"home/user\"> {{getUser()}}</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link text-light\" (click)=\"onSignOut()\" href=\"\" *ngIf=\"isLogin()\">Logout</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link text-light\" *ngIf=\"!isLogin()\" routerLink=\"signup\">Signup</a>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private auth:AuthService) { }\n\n  ngOnInit(): void {\n  }\n  getUser() {\n    return this.auth.getUser() ;\n  }\n  onSignOut() {\n    \n  }\n  isLogin() {\n    return this.auth.isLoggedIn;\n  }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}